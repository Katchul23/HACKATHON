# Placeholder for contextualisation_agent.py
class ContextualisationAgent:
    def __init__(self):
        self.name = "ContextualisationAgent"

    def summarize_context(self, citation_text):
        """
        GÃ©nÃ¨re un rÃ©sumÃ© simple du contexte dâ€™usage de la citation de donnÃ©es.

        Args:
            citation_text (str): Phrase contenant une citation de donnÃ©es.

        Returns:
            str: RÃ©sumÃ© du contexte d'utilisation.
        """
        text = citation_text.lower()

        # ðŸ”¹ Heuristique multilingue
        if "pour analyser" in text or "to analyze" in text:
            return "Les donnÃ©es ont Ã©tÃ© utilisÃ©es Ã  des fins d'analyse."
        elif "afin de comprendre" in text or "to understand" in text:
            return "Les donnÃ©es ont servi Ã  mieux comprendre un phÃ©nomÃ¨ne."
        elif "dans le cadre de" in text or "as part of" in text:
            return "Les donnÃ©es ont Ã©tÃ© mobilisÃ©es dans un cadre spÃ©cifique d'Ã©tude."
        elif "utilisÃ©es pour" in text or "used for" in text or "used to" in text:
            return "Utilisation fonctionnelle des donnÃ©es identifiÃ©e."
        elif "comparÃ©es Ã " in text or "compared to" in text:
            return "Les donnÃ©es ont Ã©tÃ© utilisÃ©es pour des comparaisons."
        elif "collectÃ©es afin de" in text or "collected to" in text:
            return "DonnÃ©es collectÃ©es dans un objectif dÃ©fini."
        elif "dans cette Ã©tude" in text or "in this study" in text:
            return "Les donnÃ©es ont Ã©tÃ© mobilisÃ©es dans le cadre de l'Ã©tude actuelle."

        # ðŸ”¸ Par dÃ©faut : tronque proprement la phrase comme contexte
        clean_preview = citation_text.strip().replace("\n", " ").replace("  ", " ")
        if len(clean_preview) > 100:
            clean_preview = clean_preview[:97] + "..."
        return f"Contexte dâ€™utilisation : {clean_preview}"
